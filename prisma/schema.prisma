generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  habits        Habit[]
}

model Account {
  id                Int       @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?   @map("refreshToken")
  access_token      String?   @map("accessToken")
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int       @id @default(autoincrement())
  sessionToken String    @unique
  userId       Int
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String    @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Habit {
  id            Int      @id @default(autoincrement())
  name          String
  type          String
  timesPerDay   Int?
  missesAllowed Int?
  timeGoal      Int?
  isActive      Boolean  @default(true)
  userId        Int
  user          User     @relation(fields: [userId], references: [id])
  logs          Log[]
}

model Log {
  id      Int      @id @default(autoincrement())
  date    DateTime
  value   Float
  habitId Int
  habit   Habit    @relation(fields: [habitId], references: [id])
}
